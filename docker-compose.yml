services:
  db:
    image: postgres:15
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME:-agendamento_veiculos}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "${DB_PORT:-5432}:5432"
    restart: unless-stopped

  web:
    build: .
    command: >
      sh -c "mkdir -p /app/static &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:8000 agendamento_veiculos.wsgi:application"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DB_ENGINE=postgresql
      - DB_HOST=db
    depends_on:
      - db
    restart: unless-stopped

  # ServiÃ§o para desenvolvimento com live reload
  web-dev:
    build: .
    command: >
      sh -c "mkdir -p /app/static &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DEBUG=True
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - DB_ENGINE=postgresql
      - DB_HOST=db
    depends_on:
      - db
    profiles:
      - dev

volumes:
  postgres_data:
  static_volume: